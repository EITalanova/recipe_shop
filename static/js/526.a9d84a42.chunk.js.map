{"version":3,"file":"static/js/526.a9d84a42.chunk.js","mappings":"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","sources":["webpack://recipe_shop/./src/components/ButtonNav/ButtonNav.module.scss?f3f5","components/ButtonNav/ButtonNav.jsx","../node_modules/nanoid/index.browser.js","webpack://recipe_shop/./src/page/styles/Recipe.module.scss?a6bd","page/Recipe.jsx","zustand/store.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ButtonNav_btn__UmLpQ\"};","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport style from './ButtonNav.module.scss';\n\nexport const ButtonNav = ({ path, text, className, onClick }) => {\n  return (\n    <Link onClick={onClick} to={path} className={cn(style.btn, `${className}`)}>\n      {text}\n    </Link>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"recipeBox\":\"Recipe_recipeBox__P-wtX\",\"recipeImgBox\":\"Recipe_recipeImgBox__3Bmib\",\"recipeImg\":\"Recipe_recipeImg__-Evli\",\"recipeTextBox\":\"Recipe_recipeTextBox__sxHiY\",\"recipeList\":\"Recipe_recipeList__1bcJA\",\"recipeText\":\"Recipe_recipeText__AU-HY\",\"recipeBtn\":\"Recipe_recipeBtn__84oON\"};","import { nanoid } from 'nanoid';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport useBeerStore from '../zustand/store';\n\nimport { ButtonNav } from 'components/ButtonNav/ButtonNav';\n\nimport style from './styles/Recipe.module.scss';\n\nconst Recipe = () => {\n  const { id } = useParams();\n  const fetchRecipeById = useBeerStore(state => state.fetchRecipeById);\n  const recipe = useBeerStore(state => state.oneRecipe);\n\n  useEffect(() => {\n    fetchRecipeById(id);\n  }, [fetchRecipeById, id]);\n  console.log(recipe);\n\n  return (\n    <div>\n      <ButtonNav className={style.recipeBtn} path=\"/recipes\" text=\"Back\" />\n      {recipe && (\n        <div className={style.recipeBox}>\n          <div className={style.recipeImgBox}>\n            <img\n              className={style.recipeImg}\n              src={recipe.image_url}\n              alt=\"beer\"\n            />\n          </div>\n          <div className={style.recipeTextBox}>\n            <h2 className={style.recipeCardTitle}>{recipe.name}</h2>\n            <p className={style.recipeText}>{recipe.description}</p>\n            <ul className={style.recipeList}>\n              Ingredients\n              {recipe.ingredients.hops && recipe.ingredients.hops.map(hop => (\n                <li className={style.recipeText} key={nanoid()}>\n                  <p>\n                    {hop.name}: {hop.amount.value} {hop.amount.unit}\n                  </p>\n                </li>\n              ))}\n            </ul>\n            <ul className={style.recipeList}>\n              Food pairing\n              {recipe.food_pairing && recipe.food_pairing.map(food => (\n                <li className={style.recipeText} key={nanoid()}>\n                  <p>{food}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Recipe;\n","import axios from 'axios';\nimport { create } from 'zustand';\n// import { persist } from 'zustand/middleware';\n\naxios.defaults.baseURL = 'https://api.punkapi.com/v2';\n\nconst useBeerStore = create(set => ({\n  recipes: [],\n  oneRecipe: null,\n  favoriteRecipes: [],\n\n  fetchRecipes: async () => {\n    try {\n      const res = await axios.get(`/beers?page=1`);\n      set({ recipes: res.data });\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  fetchRecipeById: async id => {\n    try {\n      const res = await axios.get(`/beers/${id}`);\n      set({ oneRecipe: res.data[0] });\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  addFavoriteRecipe: id => {\n    set(state => ({ favoriteRecipes: [...state.favoriteRecipes, id] }));\n  },\n\n  removeFavoriteRecipe: id => {\n    set(state => ({\n      favoriteRecipes: state.favoriteRecipes.filter(\n        idFavorite => idFavorite !== id\n      ),\n    }));\n  },\n}));\n\nexport default useBeerStore;\n"],"names":["ButtonNav","path","text","className","onClick","to","cn","style","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useParams","fetchRecipeById","useBeerStore","state","recipe","oneRecipe","useEffect","console","log","src","image_url","alt","name","description","ingredients","hops","map","hop","amount","value","unit","food_pairing","food","axios","create","set","recipes","favoriteRecipes","fetchRecipes","res","data","error","addFavoriteRecipe","removeFavoriteRecipe","filter","idFavorite"],"sourceRoot":""}